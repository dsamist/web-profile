#this workflow is written to perform CI/CD of my web application to prod

name: Application Deployment

on:
  push:
    branches: [master]
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      
      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/mywebsite:${{ github.sha }}
          secrets:
            CERTIFICATE_CRT=${{secrets.CERTIFICATE_CRT}}
            CERTIFICATE_KEY=${{secrets.CERTIFICATE_KEY}}
            NGINX_CONF=${{secrets.NGINX_CONF}}


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: code checkout
        uses: actions/checkout@v4

      #install kubectl
      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'
        id: install
      
      #set the k8s config
      - name: Set the kubernetes config file
        uses: azure/k8s-set-context@v4
        with: 
          method: kubeconfig
          kubeconfig: ${{secrets.KUBECONFIG}}
      
      - name: Display k8s cluster details
        run: |
          kubectl version --short -o yaml
          echo --------------------------
          kubectl get nodes
          kubectl get namespaces


      - name: Replace placeholders token in k8s manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKER_USERNAME }}/mywebsite:${{ github.sha }}
          DNS_HOST: ${{ vars.DNS_HOST }}
      
      #deploy k8s object to the cluster
      - name: Deploy k8s object to the cluster
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml

 
        

